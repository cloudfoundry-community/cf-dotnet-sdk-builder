//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//
<% version = if is_v3 then "V3" else "V2" end %>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CloudFoundry.CloudController.<%= version %>.Client.Data;
using CloudFoundry.CloudController.<%= version %>;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.<%= version %>.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class <%= endpoint.name.pretty_name %>Test
    {
<% data_classes.each do |data_class, body| %>
    <% json_body = JSON.parse(body)
    paged = !json_body["total_results"].nil? %>
        [TestMethod]
        public void Test<%= data_class.name %>()
        {
            string json = @"<%= body.gsub "\"", "\"\"" %>";
    <% if paged %>
            PagedResponseCollection<<%= data_class.name %>> page = Utilities.DeserializePage<<%= data_class.name %>>(json, null);
        <% json_body.each do |key, value|%>
            <% if !(value.is_a? Hash) && !(value.is_a? Array) %>Assert.AreEqual("<%= value %>", TestUtil.ToTestableString(page.Properties.<%= key.pretty_name %>), true);<% end %>
        <% end %>
            <% i = 0
               json_body["resources"].each do |resource| %>
            <% if resource["metadata"]
                 resource["metadata"].each do |key, value|%>
                <% if !(value.is_a? Hash) && !(value.is_a? Array) %>Assert.AreEqual("<%= value %>", TestUtil.ToTestableString(page[<%= i %>].EntityMetadata.<%= key.pretty_name %>), true);<% end
                end
            end
            if resource["entity"]
               resource["entity"].each do |key, value|%>
                  <% if !(value.is_a? Hash) && !(value.is_a? Array) %>Assert.AreEqual("<%= value %>", TestUtil.ToTestableString(page[<%= i %>].<%= key.pretty_name %>), true);<% end
               end
            end
            resource.each do |key, value|%>
               <% if !(value.is_a? Hash) && !(value.is_a? Array) %>Assert.AreEqual("<%= value %>", TestUtil.ToTestableString(page[<%= i %>].<%= key.pretty_name %>), true);<% end
            end
            i=i+1%>
            <% end %>
    <% else %>
            <%= data_class.name %> obj = Utilities.DeserializeJson<<%= data_class.name %>>(json);
        <% if json_body["metadata"]
        json_body["metadata"].each do |key, value|%>
            <% if !(value.is_a? Hash) && !(value.is_a? Array) %>Assert.AreEqual("<%= value %>", TestUtil.ToTestableString(obj.EntityMetadata.<%= key.pretty_name %>), true);<% end
           end
        end
        if json_body["entity"]
          json_body["entity"].each do |key, value|%>
            <% if !(value.is_a? Hash) && !(value.is_a? Array) %>Assert.AreEqual("<%= value %>", TestUtil.ToTestableString(obj.<%= key.pretty_name %>), true);<% end
          end
        end
        json_body.each do |key, value|%>
            <% if !(value.is_a? Hash) && !(value.is_a? Array) %>Assert.AreEqual("<%= value %>", TestUtil.ToTestableString(obj.<%= key.pretty_name %>), true);<% end
        end
      end %>
        }
<% end %>
    }
}
